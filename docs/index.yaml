openapi: 3.0.0

info:
  title: Room
  description: Internal API specification document
  version: 2.0.0

servers:
  - url: https://dev.bestream.com/linkage/api/v1
    description: beSTREAM API

  - url: http://{host}:{port}/api/v1
    description: Development API
    variables:
      host:
        default: localhost
      port:
        default: '3000'

  - url: https://{host}:{port}/api/v1
    description: Room Production API
    variables:
      host:
        default: localhost
      port:
        default: '3001'

security:
  - BearerAuth: []

tags:

  - name: üôè requests
    description: (bestream)

  - name: users
    description: (bestream)

  - name: history
    description: (bestream)

  - name: like
    description: (bestream)

  - name: sharing
    description: (bestream)

  - name: videos
    description: (bestream)

  - name: trash
    description: (bestream)

  - name: retrieve
    description: (bestream)

  - name: images
    description: (bestream)

  - name: albums
    description: (bestream)

  - name: rooms
    description: (Room)
  
  - name: chats
    description: (Room)

paths:
  /users:
      get:
        tags:
          - üôè requests
        summary: Gets All Matching users
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
          - in: query
            name: username
            schema:
              type: string
            required: false
            description: User's name
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    properties:
                      user:
                        type: object
                      channel:
                        type: object
                      subscription:
                        type: object

  /user:
      get:
        tags:
          - users
        summary: Gets user information
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      type: object
                    channel:
                      type: object
                    subscription:
                      type: object

  /user/code/create:
      post:
        tags: 
          - users
        summary: Sets user code
        parameters:
          - in: query
            name: id
            schema:
              type: string
            required: true
            description: Auth0 user_id
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                    user:
                      type: object

  /user/history/list:
      get:
        tags:
          - history
        summary: Gets history list
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next:
                      type: boolean
                    pages:
                      type: integer
                    payload:
                      type: array
                      items:
                        properties: 
                          id:
                            type: integer
                    total: 
                      type: integer

  /user/like/list:
      get:
        tags:
          - like
        summary: Gets like list
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next:
                      type: boolean
                    pages:
                      type: integer
                    payload:
                      type: array
                      items:
                        properties: 
                          id:
                            type: integer
                    total: 
                      type: integer

  /user/sharing/list:
      get:
        tags:
          - sharing
        summary: Gets sharing list
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    payload:
                      type: array
                      items:
                        properties: 
                          id:
                            type: integer

  /user/video/list:
      get:
        tags:
          - videos
        summary: Gets video list
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next:
                      type: boolean
                    pages:
                      type: integer
                    payload:
                      type: array
                      items:
                        properties: 
                          id:
                            type: integer
                    total: 
                      type: integer

  /user/trush/list:
      get:
        tags:
          - trash
        summary: Gets trushed list
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next:
                      type: boolean
                    pages:
                      type: integer
                    payload:
                      type: array
                      items:
                        properties: 
                          id:
                            type: integer
                    total: 
                      type: integer

  /user/video/retrieve/{video_code}:
      get:
        tags:
          - retrieve
        summary: Retrieve video
        parameters:
          - in: path
            name: video_code
            schema:
              type: string
            required: true
            description: Video Code
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    payload:
                      type: string
                      example: U2FsdGVkX18Rc/jJjjZ....... 
                    status:
                      type: string
                      example: success

  /user/video/trash:
      post:
        tags:
          - trash
        summary: Trash video
        parameters:
          - in: query
            name: IDs
            schema:
                type: array
            required: true
            description: Array of video IDs
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success

  /user/video/recover:
      post:
        tags:
          - trash
        summary: Recover video from Trash
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success

  /user/video/update:
      post:
        tags:
          - videos
        summary: Update video
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success

  /user/video/image:
      post:
        tags:
          - images
        summary: Update thumbnail image
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
          - in: query
            name: target_code
            schema:
              type: string
            required: true
            description: Video Code
          - in: query
            name: filename
            schema:
              type: string
            required: true
            description: Original filename
          - in: query
            name: thumbnail
            schema:
              type: string
              format: binary
            required: true
            description: File data
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    new_file:
                      type: string
                      example: /user/OgwlAk/poster/zvAUngGh_thumbnail.jpg?32f67d6bfe0c8e0ae97fc87ed6b1ded4
                    status:
                      type: string
                      example: success

  /user/video/delete:
      post:
        tags:
          - videos
        summary: Deletes video
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success

  /user/video/download-link/{video_code}:
      post:
        tags:
          - videos
        summary: Gets download url
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    limit:
                      type: string
                    url:
                      type: string
                      example: https://bestream-dev-convert-jp.s3.ap-northeast-1.amazonaws.com/OgwlAk/zvAUngGh/zvAUngGh.webm?X-Amz-Content-Sha256=UNSIGNED-PAYL...

  /user/album:
      post:
        tags:
          - albums
        summary: Gets album
        parameters:
          - in: query
            name: code
            schema:
              type: string
            required: true
            description: User Code
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success

  /rooms:
    get:
      tags: 
        - rooms
      summary: Gets All Room
      parameters:
        - in: query
          name: access_code
          schema:
            type: string
          required: true
          description: Access code
        - in: query
          name: code
          schema:
            type: string
          required: false
          description: User code
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: Room name
      responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    properties:
                      next:
                        type: boolean
                      pages:
                        type: integer
                        example: 2
                      payload:
                        type: array
                        items:
                          $ref: "#/components/schemas/Room"
                      total:
                        type: integer
                        example: 10
          "400":
            description: Missing Parameters
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP400"
          "401":
            description: Unauthorized Access
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP401"
          "404":
            description: Invalid Data
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP404"
  
  /room:
    get:
      tags: 
        - rooms
      summary: Gets Particluar Room
      parameters:
        - in: query
          name: access_code
          schema:
            type: string
          required: true
          description: Access code
        - in: query
          name: room_id
          schema:
            type: string
          required: true
          description: Room ID
      responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Room"
          "400":
            description: Missing Parameters
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP400"
          "401":
            description: Unauthorized Access
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP401"
          "404":
            description: Invalid Data
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP404"
    post:
      tags: 
        - rooms
      summary: Adds Room
      parameters:
        - in: query
          name: access_code
          schema:
            type: string
          required: true
          description: Access code
      requestBody:
        content: 
          application/json:
            schema:
              type: object
              properties:
                room_name:
                  type: string
                cover:
                  type: string
                invited_users_id:
                  type: array
                  items:
                    type: integer

      responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status: 
                      type: integer
                      default: 200
                    type:
                      type: string
                      default: OPERATION_SUCCEED
                    message:
                      type: string
                      default: room added
          "400":
            description: Missing Parameters
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP400"
          "401":
            description: Unauthorized Access
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP401"
          "404":
            description: Invalid Data
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP404"

    put:
      tags: 
        - rooms
      summary: Adds Room
      parameters:
        - in: query
          name: access_code
          schema:
            type: string
          required: true
          description: Access code
      requestBody:
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/Room"

      responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status: 
                      type: integer
                      default: 200
                    type:
                      type: string
                      default: OPERATION_SUCCEED
                    message:
                      type: string
                      default: room updated
          "400":
            description: Missing Parameters
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP400"
          "401":
            description: Unauthorized Access
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP401"
          "404":
            description: Invalid Data
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP404"

    delete:
      tags: 
        - rooms
      summary: Adds Room
      parameters:
        - in: query
          name: access_code
          schema:
            type: string
          required: true
          description: Access code

      responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status: 
                      type: integer
                      default: 200
                    type:
                      type: string
                      default: OPERATION_SUCCEED
                    message:
                      type: string
                      default: room deleted
          "400":
            description: Missing Parameters
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP400"
          "401":
            description: Unauthorized Access
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP401"
          "404":
            description: Invalid Data
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/HTTP404"
  
  /chats:
    get:
        tags:
          - chats
        summary: Gets all chat history
        parameters:
          - in: query
            name: access_code
            schema:
              type: string
            required: true
            description: Access code
          - in: query
            name: sender_id
            schema:
              type: integer
            required: true
            description: Sender ID
          - in: query
            name: receiver_id
            schema:
              type: integer
            required: true
            description: Receiver ID
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next:
                      type: boolean
                    pages:
                      type: integer
                    payload:
                      type: array
                      items:
                        properties: 
                          id:
                            type: integer
                    total: 
                      type: integer


components:
  schemas:

    Room:
      type: object
      properties:
        room_id: 
          type: integer
        master_id:
          type: integer
        master_username:
          type: string
        cover:
          type: string
        room_name:
          type: string
        user_ammount:
          type: integer
        room_users:
          $ref: "#/components/schemas/User"
          
    User:
      type: object
      properties:
        user_id:
          type: integer
        email:
          type: string
        icon:
          type: string
        joined_at:
          type: integer
        avatar_id: 
          type: string
        username: 
          type: string
    
    HTTP400:
      type: object
      properties:
        status: 
          type: integer
          default: 400
        type:
          type: string
          default: MISSING_PARAMETERS
        message:
          type: string
          default: "{param} is missing"

    HTTP401:
      type: object
      properties:
        status: 
          type: integer
          default: 401
        type:
          type: string
          default: AUTHORIZATION_ERROR
        message:
          type: string
          default: "user is not authorized"

    HTTP404:
      type: object
      properties:
        status: 
          type: integer
          default: 404
        type:
          type: string
          default: INVALID_DATA
        message:
          type: string
          default: "invalid data"
        

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Credentials or access token for API